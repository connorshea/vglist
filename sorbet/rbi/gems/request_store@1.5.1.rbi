# typed: strict

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `request_store` gem.
# Please instead update this file by running `bin/tapioca gem request_store`.

# A middleware that ensures the RequestStore stays around until
# the last part of the body is rendered. This is useful when
# using streaming.
#
# Uses Rack::BodyProxy, adapted from Rack::Lock's usage of the
# same pattern.
module RequestStore
  class << self
    def [](key); end
    def []=(key, value); end

    # @return [Boolean]
    def active?; end

    def begin!; end
    def clear!; end
    def delete(key, &block); end
    def end!; end

    # @return [Boolean]
    def exist?(key); end

    def fetch(key); end
    def read(key); end
    def store; end
    def store=(store); end
    def write(key, value); end
  end
end

class RequestStore::Middleware
  # @return [Middleware] a new instance of Middleware
  def initialize(app); end

  def call(env); end
end

class RequestStore::Railtie < ::Rails::Railtie; end
RequestStore::VERSION = T.let(T.unsafe(nil), String)
