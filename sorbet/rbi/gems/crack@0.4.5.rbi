# typed: strict

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `crack` gem.
# Please instead update this file by running `bin/tapioca gem crack`.

module Crack; end

class Crack::REXMLParser
  class << self
    def parse(xml); end
  end
end

class Crack::XML
  class << self
    def parse(xml); end
    def parser; end
    def parser=(parser); end
  end
end

# This is a slighly modified version of the XMLUtilityNode from
# http://merb.devjavu.com/projects/merb/ticket/95 (has.sox@gmail.com)
# It's mainly just adding vowels, as I ht cd wth n vwls :)
# This represents the hard part of the work, all I did was change the
# underlying parser.
class REXMLUtilityNode
  # @return [REXMLUtilityNode] a new instance of REXMLUtilityNode
  def initialize(name, normalized_attributes = T.unsafe(nil)); end

  def add_node(node); end
  def attributes; end
  def attributes=(_arg0); end
  def children; end
  def children=(_arg0); end

  # Get the inner_html of the REXML node.
  def inner_html; end

  def name; end
  def name=(_arg0); end
  def to_hash; end

  # Converts the node into a readable HTML node.
  #
  # @return [String] The HTML node in text form.
  def to_html; end

  def to_s; end
  def type; end
  def type=(_arg0); end

  # Typecasts a value based upon its type. For instance, if
  # +node+ has #type == "integer",
  # {{[node.typecast_value("12") #=> 12]}}
  #
  # @note If +self+ does not have a "type" key, or if it's not one of the
  #   options specified above, the raw +value+ will be returned.
  # @param value [String] The value that is being typecast.
  # @return [Integer, TrueClass, FalseClass, Time, Date, Object] The result of typecasting +value+.
  def typecast_value(value); end

  # Take keys of the form foo-bar and convert them to foo_bar
  def undasherize_keys(params); end

  private

  def unnormalize_xml_entities(value); end

  class << self
    def available_typecasts; end
    def available_typecasts=(obj); end
    def typecasts; end
    def typecasts=(obj); end
  end
end

# The Reason behind redefining the String Class for this specific plugin is to
# avoid the dynamic insertion of stuff on it (see version previous to this commit).
# Doing that disables the possibility of efectuating a dump on the structure. This way it goes.
class REXMLUtiliyNodeString < ::String
  # Returns the value of attribute attributes.
  def attributes; end

  # Sets the attribute attributes
  #
  # @param value the value to set the attribute attributes to.
  def attributes=(_arg0); end
end
