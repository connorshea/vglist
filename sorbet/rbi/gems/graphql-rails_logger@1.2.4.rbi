# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `graphql-rails_logger` gem.
# Please instead update this file by running `bin/tapioca gem graphql-rails_logger`.

module GraphQL
  class << self
    def default_parser; end
    def default_parser=(_arg0); end
    def parse(graphql_string, trace: T.unsafe(nil)); end
    def parse_file(filename); end
    def parse_with_racc(string, filename: T.unsafe(nil), trace: T.unsafe(nil)); end
    def scan(graphql_string); end
    def scan_with_ruby(graphql_string); end
  end
end

module GraphQL::RailsLogger
  class << self
    # Returns the value of attribute configuration.
    def configuration; end

    # Sets the attribute configuration
    #
    # @param value the value to set the attribute configuration to.
    def configuration=(_arg0); end

    # @yield [configuration]
    def configure; end
  end
end

class GraphQL::RailsLogger::Configuration
  # @return [Configuration] a new instance of Configuration
  def initialize; end

  # Returns the value of attribute skip_introspection_query.
  def skip_introspection_query; end

  # Sets the attribute skip_introspection_query
  #
  # @param value the value to set the attribute skip_introspection_query to.
  def skip_introspection_query=(_arg0); end

  # Returns the value of attribute theme.
  def theme; end

  # Sets the attribute theme
  #
  # @param value the value to set the attribute theme to.
  def theme=(_arg0); end

  # Returns the value of attribute white_list.
  def white_list; end

  # Sets the attribute white_list
  #
  # @param value the value to set the attribute white_list to.
  def white_list=(_arg0); end
end

class GraphQL::RailsLogger::Railtie < ::Rails::Railtie; end

class GraphQL::RailsLogger::Subscriber < ::ActionController::LogSubscriber
  def start_processing(event); end

  private

  def indent(data); end
  def pretty(data); end
end

GraphQL::RailsLogger::VERSION = T.let(T.unsafe(nil), String)
