# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `fuubar` gem.
# Please instead update this file by running `bin/tapioca gem fuubar`.

class Fuubar < ::RSpec::Core::Formatters::BaseTextFormatter
  # @return [Fuubar] a new instance of Fuubar
  def initialize(*args); end

  def close(_notification); end
  def dump_failures(_notification); end
  def dump_pending(notification); end
  def example_failed(notification); end
  def example_passed(_notification); end
  def example_pending(_notification); end
  def example_tick(_notification); end

  # Returns the value of attribute example_tick_lock.
  def example_tick_lock; end

  # Sets the attribute example_tick_lock
  #
  # @param value the value to set the attribute example_tick_lock to.
  def example_tick_lock=(_arg0); end

  def example_tick_thread; end

  # Returns the value of attribute failed_count.
  def failed_count; end

  # Sets the attribute failed_count
  #
  # @param value the value to set the attribute failed_count to.
  def failed_count=(_arg0); end

  def message(notification); end
  def output; end

  # Returns the value of attribute passed_count.
  def passed_count; end

  # Sets the attribute passed_count
  #
  # @param value the value to set the attribute passed_count to.
  def passed_count=(_arg0); end

  # Returns the value of attribute pending_count.
  def pending_count; end

  # Sets the attribute pending_count
  #
  # @param value the value to set the attribute pending_count to.
  def pending_count=(_arg0); end

  # Returns the value of attribute progress.
  def progress; end

  # Sets the attribute progress
  #
  # @param value the value to set the attribute progress to.
  def progress=(_arg0); end

  def start(notification); end

  private

  def color_code_for(*args); end

  # @return [Boolean]
  def color_enabled?; end

  def configuration; end

  # @return [Boolean]
  def continuous_integration?; end

  def current_color; end
  def increment; end
  def refresh; end
  def with_current_color; end
end

Fuubar::DEFAULT_PROGRESS_BAR_OPTIONS = T.let(T.unsafe(nil), Hash)

class Fuubar::Output
  # @return [Output] a new instance of Output
  def initialize(output, force_tty = T.unsafe(nil)); end

  def __getobj__; end

  # @return [Boolean]
  def tty?; end
end
