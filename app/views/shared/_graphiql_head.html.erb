<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title><%= meta_title(yield(:title)) %></title>
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="64x64" href="/favicon-64.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16.png">
  <link rel="manifest" href="/site.webmanifest">
  <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5856d6">
  <meta name="msapplication-TileColor" content="#5856d6">
  <meta name="theme-color" content="#5856d6">

  <meta name="description" content="<%= meta_description(yield(:description)) %>">

  <meta property="og:type" content="website">
  <meta property="og:site_name" content="vglist" />
  <meta property="og:title" content="<%= meta_title(yield(:title)) %>">
  <meta property="og:description" content="<%= meta_description(yield(:description)) %>">
  <meta property="og:url" content="<%= request.original_url %>">
  <% if yield(:opengraph_image).blank? %>
    <meta property="og:image" content="<%= asset_url('vglist-opengraph-image.png')%>">
  <% else %>
    <meta property="og:image" content="<%= yield(:opengraph_image) %>">
  <% end %>

  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>

  <link rel="stylesheet" href="https://esm.sh/graphiql@5.2.0/dist/style.css" integrity="sha384-f6GHLfCwoa4MFYUMd3rieGOsIVAte/evKbJhMigNdzUf52U9bV2JQBMQLke0ua+2" crossorigin="anonymous">

  <script type="importmap" nonce="<%= content_security_policy_nonce %>">
    {
      "imports": {
        "react": "https://esm.sh/react@19.1.0",
        "react/": "https://esm.sh/react@19.1.0/",

        "react-dom": "https://esm.sh/react-dom@19.1.0",
        "react-dom/": "https://esm.sh/react-dom@19.1.0/",

        "graphiql": "https://esm.sh/graphiql@5.2.0?standalone&external=react,react-dom,@graphiql/react,graphql",
        "graphiql/": "https://esm.sh/graphiql@5.2.0/",
        "@graphiql/react": "https://esm.sh/@graphiql/react@0.37.1?standalone&external=react,react-dom,graphql,@graphiql/toolkit,@emotion/is-prop-valid",

        "@graphiql/toolkit": "https://esm.sh/@graphiql/toolkit@0.11.3?standalone&external=graphql",
        "graphql": "https://esm.sh/graphql@16.11.0",
        "@emotion/is-prop-valid": "data:text/javascript,"
      },
      "integrity": {
        "https://esm.sh/react@19.1.0": "sha384-C3ApUaeHIj1v0KX4cY/+K3hQZ/8HcAbbmkw1gBK8H5XN4LCEguY7+A3jga11SaHF",
        "https://esm.sh/react-dom@19.1.0": "sha384-CKiqgCWLo5oVMbiCv36UR0pLRrzeRKhw1jFUpx0j/XdZOpZ43zOHhjf8yjLNuLEy",
        "https://esm.sh/graphiql@5.2.0": "sha384-iJccq+zsT06wL6UQ27mjQ6OoghntU/ZdWkOmza8f/iD4hVJXQOgZeH/230Pm2y3V",
        "https://esm.sh/graphiql@5.2.0?standalone&external=react,react-dom,@graphiql/react,graphql": "sha384-32Vv0P2Qy9UWdE0/n9/nFmGh8tM5/vMgpAarsa+UdD6So+aS6DVBQZDIjS2lU52e",
        "https://esm.sh/@graphiql/react@0.37.1?standalone&external=react,react-dom,graphql,@graphiql/toolkit,@emotion/is-prop-valid": "sha384-vbrVVt6MhT20iaS0B9nwXO210Cix1sSiP+RyMEdFGEj5ZHbXJz96XxtckeWTrnkd",
        "https://esm.sh/@graphiql/toolkit@0.11.3?standalone&external=graphql": "sha384-ZsnupyYmzpNjF1Z/81zwi4nV352n4P7vm0JOFKiYnAwVGOf9twnEMnnxmxabMBXe",
        "https://esm.sh/graphql@16.11.0": "sha384-uhRXaGfgCFqosYlwSLNd7XpDF9kcSUycv5yVbjjhH5OrE675kd0+MNIAAaSc+1Pi"
      }
    }
  </script>

  <%= javascript_tag type: "module", nonce: true do -%>
    import React from 'react';
    import ReactDOM from 'react-dom/client';
    import { GraphiQL, HISTORY_PLUGIN } from 'graphiql';
    import { createGraphiQLFetcher } from '@graphiql/toolkit';
    import 'graphiql/setup-workers/esm.sh';

    const fetcher = createGraphiQLFetcher({
      url: window.location.origin + '/graphql',
      headers: {
        'Content-Type': 'application/json',
        'User-Agent': 'vglist.co GraphiQL',
        'X-User-Email': "<%= @email %>",
        'X-User-Token': "<%= @token %>"
      }
    });

    const plugins = [HISTORY_PLUGIN];

    function App() {
      return React.createElement(GraphiQL, {
        fetcher,
        plugins,
        defaultEditorToolsVisibility: true,
        initialHeaders: `{\n  "X-User-Email": "<%= @email %>",\n  "X-User-Token": "<%= @token %>"\n}`
      });
    }

    const container = document.getElementById('graphiql-injection-point');
    const root = ReactDOM.createRoot(container);
    root.render(React.createElement(App));
  <% end %>
</head>
